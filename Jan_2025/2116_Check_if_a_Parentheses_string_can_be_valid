class Solution {
public:
    bool canBeValid(string s, string locked) {
        int l=s.size();
        if(l%2==1) return false;
        int open=0, unlocked=0;
        for(int i=0; i<l; i++){
            if(locked[i]=='0') unlocked++;
            else if(s[i]=='(') open++;
            else if(s[i]==')'){
                if (open>0) open--;
                else if (unlocked>0) unlocked--;
                else return false;
            }
        }
        int balance=0;
        for(int i=l-1; i>=0; i--){
            if(locked[i]=='0'){
                balance--;
                unlocked--;
            }
            else if(s[i]=='('){
                balance++;
                open--;
            }
            else if(s[i]==')') balance--;
            if(balance>0) return false;
            if(unlocked==0 and open==0) break;
        }
        if(open>0) return false;
        return true;
    }
};